/**
 * A doubly-ended queue.
 *
 * ```ts
 * const queue = new Deque<number>()
 * queue.push(3)
 * queue.push(4)
 * queue.unshift(2)
 * queue.unshift(1)
 * queue.shift() // 1
 * queue.pop() // 4
 * ```
 */
export declare class Deque<T> {
    private _list;
    /**
     * Number of elements in the queue.
     */
    get length(): number;
    /**
     * Preview the element to shift next.
     */
    peekStart(): T | undefined;
    /**
     * Preview the element to pop next.
     */
    peekEnd(): T | undefined;
    /**
     * Push an element to the end of the queue.
     *
     * @param val Element to push.
     */
    push(val: T): void;
    /**
     * Pop an element from the end of the queue.
     */
    pop(): T | undefined;
    /**
     * Push an element to the start of the queue.
     *
     * @param val Element to push.
     */
    unshift(val: T): void;
    /**
     * Pop an element from the start of the queue.
     */
    shift(): T | undefined;
}
