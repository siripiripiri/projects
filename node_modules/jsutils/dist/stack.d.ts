/**
 * A proper stack implemented using a linked list.
 */
export declare class Stack<T> {
    private _list;
    /**
     * Create a new stack with an optional initial element.
     *
     * @param initial Optional initial element.
     */
    constructor(initial?: T);
    /**
     * Number of elements in the queue.
     */
    get length(): number;
    /**
     * Preview the element to pop next.
     */
    peek(): T | undefined;
    /**
     * Push an element to the stack.
     *
     * @param val Element to push.
     */
    push(val: T): void;
    /**
     * Pop an element from the stack.
     */
    pop(): T | undefined;
    /**
     * Pop all the elements left in the stack into an array.
     *
     * @returns An array of the elements.
     */
    popAll(): T[];
    /**
     * Push all elements given in an optional specific order.
     *
     * @param vals An array of elements to push.
     * @param reversed Push the elements in reversed order.
     */
    pushAll(vals: T[], reversed?: boolean): void;
}
